name: deploy-pipeline
run-name: ${{ github.repository }} deploy pipeline
on:
  schedule:
    - cron: '00 6 * * *' #***THIS WILL DELETE YOUR CLUSTER***
  workflow_dispatch:
    inputs:
      environment:
        type: choice
        description: Environment to deploy
        options: 
        - dev
        default: dev
      destroy:
        type: boolean
        description: Destroy Terraform
        default: false

jobs:
  deploy:
    name: 'Deploy ${{ github.event.inputs.environment }}'
    env:
      ENVIRONMENT: ${{ github.event.inputs.environment }}
      TF_INPUT: false
      REPO_NAME: ${{ github.event.repository.name }}
      GITHUB_CONTAINER_TOKEN: ${{ secrets.IW_GITHUB_CONTAINER_TOKEN }}
      AKS_CLUSTER_NAME: ${{ github.event.inputs.cluster }}
      AZ_RESOURCE_GROUP: ${{ github.event.inputs.resource-group }}
      ARM_CLIENT_ID: ${{secrets.ARM_CLIENT_ID}}
      ARM_CLIENT_SECRET: ${{secrets.ARM_CLIENT_SECRET}}
      ARM_TENANT_ID: ${{secrets.ARM_TENANT_ID}}
      ARM_SUBSCRIPTION_ID: ${{secrets.ARM_SUBSCRIPTION_ID}}
    runs-on: ubuntu-latest
    steps:

      - name: Checkout
        uses: actions/checkout@v2

      - name: Set the variables
        env:
          DEFAULT_ENV: 'dev'
        run: |
          echo "ENVIRONMENT=${{ github.event.inputs.environment || env.DEFAULT_ENV }}" >> $GITHUB_ENV
          echo "IS_SCHEDULED=${{ github.event_name == 'schedule' }}" >> $GITHUB_ENV

      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: '{"clientId": "${{ env.ARM_CLIENT_ID}}", "clientSecret":"${{env.ARM_CLIENT_SECRET}}", "tenantId": "${{ env.ARM_TENANT_ID}}","subscriptionId": "${{ env.ARM_SUBSCRIPTION_ID}}"}'

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.7.4

      - name: Terraform Init
        run: |
          terraform init -backend-config="key=${{ env.REPO_NAME }}-${{ env.ENVIRONMENT }}.tfstate"

      - name: Terraform Validate
        run: |
          terraform validate

      - name: Terraform Plan
        if: github.event.inputs.destroy == 'false'
        id: plan
        run: |
          terraform plan -out=plan.out -var-file="tfvars/${{ env.ENVIRONMENT }}.tfvars"

      - name: Terraform Apply
        if: github.event.inputs.destroy == 'false'
        run: |
          terraform apply -auto-approve plan.out

      - name: Terraform Destroy
        if: github.event.inputs.destroy == 'true' || env.IS_SCHEDULED == 'true'
        run: |
          terraform destroy -auto-approve -var-file="tfvars/${{ env.ENVIRONMENT }}.tfvars"

      - name: Update kube config
        run: az aks get-credentials --resource-group $AZ_RESOURCE_GROUP --name $AKS_CLUSTER_NAME

      - name: Set up Kubectl
        if: github.event.inputs.destroy == 'false'
        uses: azure/setup-kubectl@v1
        with:
          version: 'v1.29.0'

      - name: Create Docker Registry Secret
        if: github.event.inputs.destroy == 'false'
        run: |
          kubectl get secret github-token || \
          kubectl create secret docker-registry github-token \
            --docker-server=ghcr.io \
            --docker-username=sladebutler \
            --docker-password=${{ env.GITHUB_CONTAINER_TOKEN }} 
